# vim:syn=zsh

set shell sh
set shellopts '-eu'
set ifs "\n"
set scrolloff 10

cmd open ${{
    case $(file --mime-type $f -b) in
        text/*) nvim $fx;;
        *) for f in $fx; do $OPENER $f > /dev/null 2> /dev/null & done;;
    esac
}}

%mkdir -p ~/.trash

cmd trash %set -f; mv $fx ~/.trash; echo $fx trashed

cmd mkdir %mkdir "$(echo $* | tr ' ' '\ ')"

cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -v -r $1.zip $1
    rm -rf $1
}}

cmd bulk-rename ${{
    old=$(mktemp)
    new=$(mktemp)
    [ -n $fs ] && fs=$(ls)
    printf "$fs\n" > $old
    printf "$fs\n" > $new
    $EDITOR $new
    [ $(cat $new | wc -l) -ne $(cat $old | wc -l) ] && exit
    paste $old $new | while read names; do
        src=$(printf $names | cut -f1)
        dst=$(printf $names | cut -f2)
        [ $src = $dst ] && continue
        [ -e $dst ] && continue
        mv $src $dst
    done
    rm $old $new
    lf -remote "send $id unselect"
}}

cmd Link %{{
    set -- $(cat ~/.local/share/lf/files)
    mode="$1"
    shift
    if [ "$#" -lt 1 ]; then
        lf -remote "send $id echo no files to link"
        exit 0
    fi
    case "$mode" in
        # symbolically copy mode is indicating a soft link
        copy) ln -sr -t . -- "$@";;
        # while a move mode is indicating a hard link
        move) ln -t . -- "$@";;
    esac
    rm ~/.local/share/lf/files
    lf -remote "send clear"
}}

cmd newfolder %{{
    set -f
    printf "nombre carpeta: "
    read newd
    mkdir $newd
    mv $fx $newd
}}

cmd img &{{
    a="${f##*/}"
    num=$(ls . | grep -n $a | cut -f1 -d:)
    # sel=$(echo $fx | sxiv -aib -n $num -g 1100x900+410+50 -o) 
    # set -f
    sel=$(basename -a $(sxiv -a . -n $num -g 1100x900+410+50 -o))
    # sel=$(printf %q $sel)
    sel=$( echo "$sel" | sed 's/ /\\ /g')
    # echo $sel>out
    # lf -remote "send unselect"
    lf -remote "send select $sel"
    lf -remote "send toggle $(echo $sel)"
}}

cmd imG &{{
    a="${f##*/}"
    num=$(ls . | grep -n $a | cut -f1 -d:)
    sel=$(basename -a $(sxiv -at . -n $num -g 1100x900+410+50 -o))
    sel=$( echo "$sel" | sed 's/ /\\ /g')
    lf -remote "send select $sel"
    lf -remote "send select $(echo $sel)"
    # sxiv -ab . -n $num -g 1100x900+410+50
}}

cmd blah ${{
    chmod +x $fx
    lf -remote 'send reload'
}}

map st :set sortby time; set info time; set reverse!; top -- [];

map <c-f> $lf -remote "send $id select '$(fzf)'"
map <c-x> blah

map C push R<a-b><a-b><a-f><c-u> # change till ext
map I push R<c-a> # at the very beginning
map R rename # at the very end
map r push R<a-b><a-b><a-f> # before extention
map B bulk-rename 
map S $echo `date +'%A'` >> `date  +'%d-%m-%Y'`;rm ~/log/today;ln `date +'%d-%m-%Y'` ~/log/today 

map P :Link
map N push $touch<space>
map b $man $f
map x trash
map X !$f
map o !mimeopen $f
map O !mimeopen --ask $f
map go $zathura $f &
map a push :mkdir<space>
map A newfolder
map t extract $f
map T push :tar<space>
map Z push :zip<space>
map D delete
map <a-o> quit
map J push 6j
map K push 6k
map H push hkl
map L push hjl
map ? doc
map <esc> quit
map q quit
set previewer ~/.config/lf/pv.sh
map i $~/.config/lf/pv.sh $f | less -R

map w img
map W imG

map . &nautilus .
